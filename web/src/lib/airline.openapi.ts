/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/health": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Health check endpoint */
        get: operations["healthCheck"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/aircraft": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List all aircraft */
        get: operations["listAircraft"];
        put?: never;
        /** Create a new aircraft */
        post: operations["createAircraft"];
        /** Delete all aircraft */
        delete: operations["deleteAllAircraft"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/aircraft/{aircraftSpec}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get aircraft by ID or registration */
        get: operations["getAircraft"];
        put?: never;
        post?: never;
        /** Delete an aircraft */
        delete: operations["deleteAircraft"];
        options?: never;
        head?: never;
        /** Update aircraft */
        patch: operations["updateAircraft"];
        trace?: never;
    };
    "/airlines/{airlineSpec}/aircraft": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List all aircraft owned by an airline */
        get: operations["listAircraftByAirline"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/airlines/{airlineSpec}/fleets": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List all fleets for an airline */
        get: operations["listFleetsByAirline"];
        put?: never;
        /** Create a new fleet */
        post: operations["createFleet"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/airlines/{airlineSpec}/fleets/{fleetSpec}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get a fleet by ID or code */
        get: operations["getFleet"];
        put?: never;
        post?: never;
        /** Delete a fleet */
        delete: operations["deleteFleet"];
        options?: never;
        head?: never;
        /** Update a fleet */
        patch: operations["updateFleet"];
        trace?: never;
    };
    "/airlines/{airlineSpec}/fleets/{fleetSpec}/aircraft": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List aircraft in a fleet */
        get: operations["listAircraftByFleet"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/airlines/{airlineSpec}/fleets/{fleetSpec}/aircraft/{aircraftSpec}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Add an aircraft to a fleet */
        put: operations["addAircraftToFleet"];
        post?: never;
        /** Remove an aircraft from a fleet */
        delete: operations["removeAircraftFromFleet"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/aircraft-types": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List all aircraft types */
        get: operations["listAircraftTypes"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/airports": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List all airports */
        get: operations["listAirports"];
        put?: never;
        /** Create a new airport */
        post: operations["createAirport"];
        /** Delete all airports */
        delete: operations["deleteAllAirports"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/airports/{airportSpec}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get airport by ID or IATA code */
        get: operations["getAirport"];
        put?: never;
        post?: never;
        /** Delete an airport */
        delete: operations["deleteAirport"];
        options?: never;
        head?: never;
        /** Update airport */
        patch: operations["updateAirport"];
        trace?: never;
    };
    "/airports/{airportSpec}/schedules": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List schedules that depart from or arrive at an airport */
        get: operations["listSchedulesByAirport"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/airlines": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List all airlines */
        get: operations["listAirlines"];
        put?: never;
        /** Create a new airline */
        post: operations["createAirline"];
        /** Delete all airlines */
        delete: operations["deleteAllAirlines"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/airlines/{airlineSpec}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get airline by ID or IATA code */
        get: operations["getAirline"];
        put?: never;
        post?: never;
        /** Delete an airline */
        delete: operations["deleteAirline"];
        options?: never;
        head?: never;
        /** Update airline */
        patch: operations["updateAirline"];
        trace?: never;
    };
    "/airlines/{airlineSpec}/schedules": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List schedules for an airline */
        get: operations["listSchedulesByAirline"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/airlines/{airlineSpec}/flights": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List flights for an airline */
        get: operations["listFlightsByAirline"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/schedules": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List all schedules */
        get: operations["listSchedules"];
        put?: never;
        /** Create a new schedule */
        post: operations["createSchedule"];
        /** Delete all schedules */
        delete: operations["deleteAllSchedules"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/schedules/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get schedule by ID */
        get: operations["getSchedule"];
        put?: never;
        post?: never;
        /** Delete a schedule */
        delete: operations["deleteSchedule"];
        options?: never;
        head?: never;
        /** Update schedule */
        patch: operations["updateSchedule"];
        trace?: never;
    };
    "/schedules/{id}/flights": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get flights defined by a schedule */
        get: operations["listFlightsForSchedule"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/flights": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List all flights */
        get: operations["listFlights"];
        put?: never;
        /** Create a new single flight from manual input, not from a schedule */
        post: operations["createFlight"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/flights/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getFlight"];
        put?: never;
        post?: never;
        /** Delete a flight created from manual input */
        delete: operations["deleteFlight"];
        options?: never;
        head?: never;
        patch: operations["updateFlight"];
        trace?: never;
    };
    "/flights/{flightID}/seat-assignments": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get seat assignments for a flight */
        get: operations["listSeatAssignmentsForFlight"];
        put?: never;
        /** Create a seat assignment for a flight */
        post: operations["createSeatAssignment"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/passengers": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List all passengers */
        get: operations["listPassengers"];
        put?: never;
        /** Create a new passenger */
        post: operations["createPassenger"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/passengers/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getPassenger"];
        put?: never;
        post?: never;
        delete: operations["deletePassenger"];
        options?: never;
        head?: never;
        patch: operations["updatePassenger"];
        trace?: never;
    };
    "/itineraries": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List all itineraries */
        get: operations["listItineraries"];
        put?: never;
        /** Create a new itinerary from manual input, not from a schedule */
        post: operations["createItinerary"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/itineraries/{itinerarySpec}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getItinerary"];
        put?: never;
        post?: never;
        /** Delete an itinerary */
        delete: operations["deleteItinerary"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/routes": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List all routes */
        get: operations["listRoutes"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/routes/{route}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get route by IATA codes of origin and destination airports */
        get: operations["getRoute"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /**
         * Format: date-time
         * @description An [RFC 9557](https://www.rfc-editor.org/rfc/rfc9557.html) date-time string, with a time zone name, such as "2021-11-07T00:45[America/Los_Angeles]" or "2021-11-07T00:45-07:00[America/Los_Angeles]".
         */
        ZonedDateTime: string;
        AircraftID: number;
        /** @description Registration code for an aircraft. See https://en.wikipedia.org/wiki/List_of_aircraft_registration_prefixes. */
        AircraftRegistration: string;
        AircraftSpec: components["schemas"]["AircraftID"] | components["schemas"]["AircraftRegistration"];
        Aircraft: {
            id: number;
            registration: components["schemas"]["AircraftRegistration"];
            aircraftType: components["schemas"]["AircraftTypeICAOCode"];
            airline: components["schemas"]["Airline"];
        };
        /** @description ICAO aircraft type code for an aircraft. See https://en.wikipedia.org/wiki/List_of_aircraft_type_designators. */
        AircraftTypeICAOCode: string;
        AircraftType: {
            icaoCode: components["schemas"]["AircraftTypeICAOCode"];
            name: string;
        };
        AirlineID: number;
        /** @description IATA code for airline */
        AirlineIATACode: string;
        AirlineSpec: components["schemas"]["AirlineID"] | components["schemas"]["AirlineIATACode"];
        Airline: {
            id: number;
            iataCode: components["schemas"]["AirlineIATACode"];
            name: string;
        };
        /** @description A numeric identifier for the fleet that is globally unique. */
        FleetID: number;
        /** @description A short identifier for the fleet that is unique within the airline. */
        FleetCode: string;
        FleetSpec: components["schemas"]["FleetID"] | components["schemas"]["FleetCode"];
        /** @description A fleet is a set of aircraft (owned by the same airline) with common characteristics. */
        Fleet: {
            id: components["schemas"]["FleetID"];
            airline: components["schemas"]["Airline"];
            code: components["schemas"]["FleetCode"];
            description: string;
        };
        AirportID: number;
        /** @description IATA code for airport */
        AirportIATACode: string;
        AirportSpec: components["schemas"]["AirportID"] | components["schemas"]["AirportIATACode"];
        Airport: {
            id: number;
            name: string;
            iataCode: components["schemas"]["AirportIATACode"];
            country: string;
            region: string;
            point: components["schemas"]["Point"];
            /** @description Tz database ID for the timezone of the airport, such as "America/New_York". See https://en.wikipedia.org/wiki/List_of_tz_database_time_zones. */
            timezoneID: string;
        };
        Point: {
            /** Format: double */
            longitude: number;
            /** Format: double */
            latitude: number;
        };
        /** @description A date in YYYY-MM-DD format, with no timezone (timezone-naive). */
        LocalDate: string;
        DaysOfWeek: (0 | 1 | 2 | 3 | 4 | 5 | 6)[];
        /** @description A local time of day with hours and minutes (e.g., "7:30" or "21:45"), without a date or timezone. */
        TimeOfDay: string;
        Schedule: {
            id: number;
            airline: components["schemas"]["Airline"];
            number: components["schemas"]["FlightNumber"];
            originAirport: components["schemas"]["Airport"];
            destinationAirport: components["schemas"]["Airport"];
            /** Format: double */
            distanceMiles: number;
            fleet: components["schemas"]["Fleet"];
            startDate: components["schemas"]["LocalDate"];
            endDate: components["schemas"]["LocalDate"];
            daysOfWeek: components["schemas"]["DaysOfWeek"];
            departureTime: components["schemas"]["TimeOfDay"];
            durationSec: number;
            published: boolean;
        };
        FlightNumber: string;
        /** @description A single flight, either created and synced automatically from a schedule or created manually. */
        Flight: {
            id: number;
            scheduleID?: number;
            scheduleInstanceDate?: components["schemas"]["LocalDate"];
            airline: components["schemas"]["Airline"];
            number: components["schemas"]["FlightNumber"];
            originAirport: components["schemas"]["Airport"];
            destinationAirport: components["schemas"]["Airport"];
            /** Format: double */
            distanceMiles: number;
            fleet: components["schemas"]["Fleet"];
            aircraft?: components["schemas"]["Aircraft"];
            departureDateTime: components["schemas"]["ZonedDateTime"];
            arrivalDateTime: components["schemas"]["ZonedDateTime"];
            notes: string;
            /** @default false */
            published: boolean;
        };
        Route: {
            originAirport: components["schemas"]["Airport"];
            destinationAirport: components["schemas"]["Airport"];
            /** Format: double */
            distanceMiles: number;
            schedulesCount: number;
        };
        /** @description A globally unique numeric identifier for an itinerary. */
        ItineraryID: number;
        /** @description A globally unique record locator code for an itinerary. */
        RecordLocator: string;
        ItinerarySpec: components["schemas"]["ItineraryID"] | components["schemas"]["RecordLocator"];
        Itinerary: {
            id: components["schemas"]["ItineraryID"];
            recordID: components["schemas"]["RecordLocator"];
            flights: components["schemas"]["Flight"][];
            passengers: components["schemas"]["Passenger"][];
        };
        ItinerarySpecs: {
            id: components["schemas"]["ItineraryID"];
            recordID: components["schemas"]["RecordLocator"];
        };
        Passenger: {
            id: number;
            name: string;
        };
        SeatNumber: string;
        SeatAssignment: {
            id: number;
            itinerary: components["schemas"]["ItinerarySpecs"];
            passenger: components["schemas"]["Passenger"];
            flightID: number;
            seat: components["schemas"]["SeatNumber"];
        };
    };
    responses: never;
    parameters: {
        aircraftSpec: components["schemas"]["AircraftSpec"];
        airlineSpec: components["schemas"]["AirlineSpec"];
        fleetSpec: components["schemas"]["FleetSpec"];
        airportSpec: components["schemas"]["AirportSpec"];
        itinerarySpec: components["schemas"]["ItinerarySpec"];
    };
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    healthCheck: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ok?: boolean;
                    };
                };
            };
        };
    };
    listAircraft: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description List of aircraft */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Aircraft"][];
                };
            };
        };
    };
    createAircraft: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    registration: components["schemas"]["AircraftRegistration"];
                    aircraftType: components["schemas"]["AircraftTypeICAOCode"];
                    airline: components["schemas"]["AirlineSpec"];
                };
            };
        };
        responses: {
            /** @description Aircraft created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Aircraft"];
                };
            };
            /** @description Invalid request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    deleteAllAircraft: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description All aircraft deleted */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    getAircraft: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                aircraftSpec: components["parameters"]["aircraftSpec"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Aircraft found */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Aircraft"];
                };
            };
            /** @description Aircraft not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    deleteAircraft: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                aircraftSpec: components["parameters"]["aircraftSpec"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Aircraft deleted */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Aircraft not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    updateAircraft: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                aircraftSpec: components["parameters"]["aircraftSpec"];
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    registration?: components["schemas"]["AircraftRegistration"];
                    aircraftType?: components["schemas"]["AircraftTypeICAOCode"];
                    airline?: components["schemas"]["AirlineSpec"];
                };
            };
        };
        responses: {
            /** @description Aircraft updated */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Aircraft"];
                };
            };
            /** @description Aircraft not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    listAircraftByAirline: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                airlineSpec: components["parameters"]["airlineSpec"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description List of aircraft */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Aircraft"][];
                };
            };
            /** @description Airline not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    listFleetsByAirline: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                airlineSpec: components["parameters"]["airlineSpec"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description List of fleets */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Fleet"][];
                };
            };
            /** @description Airline not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    createFleet: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                airlineSpec: components["parameters"]["airlineSpec"];
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    code: components["schemas"]["FleetCode"];
                    description: string;
                };
            };
        };
        responses: {
            /** @description Fleet created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Fleet"];
                };
            };
            /** @description Airline not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    getFleet: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                airlineSpec: components["parameters"]["airlineSpec"];
                fleetSpec: components["parameters"]["fleetSpec"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Fleet found */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Fleet"];
                };
            };
            /** @description Fleet not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    deleteFleet: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                airlineSpec: components["parameters"]["airlineSpec"];
                fleetSpec: components["parameters"]["fleetSpec"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Fleet deleted */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Fleet not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    updateFleet: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                airlineSpec: components["parameters"]["airlineSpec"];
                fleetSpec: components["parameters"]["fleetSpec"];
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    code?: components["schemas"]["FleetCode"];
                    description?: string;
                };
            };
        };
        responses: {
            /** @description Fleet updated */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Fleet"];
                };
            };
            /** @description Fleet not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    listAircraftByFleet: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                airlineSpec: components["parameters"]["airlineSpec"];
                fleetSpec: components["parameters"]["fleetSpec"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description List of aircraft in the fleet */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Aircraft"][];
                };
            };
            /** @description Fleet or airline not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    addAircraftToFleet: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                airlineSpec: components["parameters"]["airlineSpec"];
                fleetSpec: components["parameters"]["fleetSpec"];
                aircraftSpec: components["parameters"]["aircraftSpec"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Aircraft added to fleet (or aircraft was already in the fleet) */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Invalid request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Aircraft, fleet, or airline not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    removeAircraftFromFleet: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                airlineSpec: components["parameters"]["airlineSpec"];
                fleetSpec: components["parameters"]["fleetSpec"];
                aircraftSpec: components["parameters"]["aircraftSpec"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Aircraft removed from fleet (or aircraft was not in fleet) */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Invalid request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Aircraft, fleet, or airline not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    listAircraftTypes: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description List of aircraft types */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AircraftType"][];
                };
            };
        };
    };
    listAirports: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description List of airports */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Airport"][];
                };
            };
        };
    };
    createAirport: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    iataCode: components["schemas"]["AirportIATACode"];
                };
            };
        };
        responses: {
            /** @description Airport created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Airport"];
                };
            };
            /** @description Invalid request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    deleteAllAirports: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description All airports deleted */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    getAirport: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                airportSpec: components["parameters"]["airportSpec"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Airport found */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Airport"];
                };
            };
            /** @description Airport not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    deleteAirport: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                airportSpec: components["parameters"]["airportSpec"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Airport deleted */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Airport not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    updateAirport: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                airportSpec: components["parameters"]["airportSpec"];
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    iataCode?: components["schemas"]["AirportIATACode"];
                };
            };
        };
        responses: {
            /** @description Airport updated */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Airport"];
                };
            };
            /** @description Airport not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    listSchedulesByAirport: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                airportSpec: components["parameters"]["airportSpec"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Schedules by airport */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Schedule"][];
                };
            };
            /** @description Airport not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    listAirlines: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description List of airlines */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Airline"][];
                };
            };
        };
    };
    createAirline: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    iataCode: components["schemas"]["AirlineIATACode"];
                    name: string;
                };
            };
        };
        responses: {
            /** @description Airline created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Airline"];
                };
            };
            /** @description Invalid request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    deleteAllAirlines: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description All airlines deleted */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    getAirline: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                airlineSpec: components["parameters"]["airlineSpec"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Airline found */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Airline"];
                };
            };
            /** @description Airline not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    deleteAirline: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                airlineSpec: components["schemas"]["AirlineSpec"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Airline deleted */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Airline not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    updateAirline: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                airlineSpec: components["parameters"]["airlineSpec"];
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    iataCode?: components["schemas"]["AirlineIATACode"];
                    name?: string;
                };
            };
        };
        responses: {
            /** @description Airline updated */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Airline"];
                };
            };
            /** @description Airline not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    listSchedulesByAirline: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                airlineSpec: components["parameters"]["airlineSpec"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description List of schedules by airline */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Schedule"][];
                };
            };
            /** @description Airline not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    listFlightsByAirline: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                airlineSpec: components["parameters"]["airlineSpec"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description List of flights by airline */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Flight"][];
                };
            };
            /** @description Airline not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    listSchedules: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description List of schedules */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Schedule"][];
                };
            };
        };
    };
    createSchedule: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    airline: components["schemas"]["AirlineSpec"];
                    number: components["schemas"]["FlightNumber"];
                    originAirport: components["schemas"]["AirportSpec"];
                    destinationAirport: components["schemas"]["AirportSpec"];
                    fleet: components["schemas"]["FleetSpec"];
                    startDate: components["schemas"]["LocalDate"];
                    endDate: components["schemas"]["LocalDate"];
                    daysOfWeek: components["schemas"]["DaysOfWeek"];
                    departureTime: components["schemas"]["TimeOfDay"];
                    durationSec: number;
                    /** @default false */
                    published?: boolean;
                };
            };
        };
        responses: {
            /** @description Schedule created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Schedule"];
                };
            };
            /** @description Invalid request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    deleteAllSchedules: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description All schedules deleted */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    getSchedule: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Schedule found */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Schedule"];
                };
            };
            /** @description Schedule not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    deleteSchedule: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Schedule deleted */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Schedule not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    updateSchedule: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    number?: components["schemas"]["FlightNumber"];
                    originAirport?: components["schemas"]["AirportSpec"];
                    destinationAirport?: components["schemas"]["AirportSpec"];
                    fleet?: components["schemas"]["FleetSpec"];
                    startDate?: components["schemas"]["LocalDate"];
                    endDate?: components["schemas"]["LocalDate"];
                    daysOfWeek?: components["schemas"]["DaysOfWeek"];
                    departureTime?: components["schemas"]["TimeOfDay"];
                    durationSec?: number;
                    published?: boolean;
                };
            };
        };
        responses: {
            /** @description Schedule updated */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Schedule"];
                };
            };
            /** @description Schedule not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    listFlightsForSchedule: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description List of flights */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Flight"][];
                };
            };
            /** @description Schedule not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    listFlights: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description List of flights */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Flight"][];
                };
            };
        };
    };
    createFlight: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    airline: components["schemas"]["AirlineSpec"];
                    number: components["schemas"]["FlightNumber"];
                    originAirport: components["schemas"]["AirportSpec"];
                    destinationAirport: components["schemas"]["AirportSpec"];
                    fleet: components["schemas"]["FleetSpec"];
                    aircraft?: components["schemas"]["AircraftSpec"];
                    departureDateTime: components["schemas"]["ZonedDateTime"];
                    arrivalDateTime: components["schemas"]["ZonedDateTime"];
                    notes: string;
                    /** @default false */
                    published?: boolean;
                };
            };
        };
        responses: {
            /** @description Flight created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Flight"];
                };
            };
            /** @description Invalid request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    getFlight: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Flight found */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Flight"];
                };
            };
            /** @description Flight not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    deleteFlight: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Flight deleted */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Flight created from a schedule can't be deleted. Edit the schedule instead. */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Flight not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    updateFlight: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    number?: components["schemas"]["FlightNumber"];
                    originAirport?: components["schemas"]["AirportSpec"];
                    destinationAirport?: components["schemas"]["AirportSpec"];
                    fleet?: components["schemas"]["FleetSpec"];
                    aircraft?: components["schemas"]["AircraftSpec"];
                    departureDateTime?: components["schemas"]["ZonedDateTime"];
                    arrivalDateTime?: components["schemas"]["ZonedDateTime"];
                    notes?: string;
                    /** @default false */
                    published?: boolean;
                };
            };
        };
        responses: {
            /** @description Flight updated */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Flight"];
                };
            };
            /** @description Flight created from schedule can't update fields set by the schedule. Edit the schedule instead. */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Flight not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    listSeatAssignmentsForFlight: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                flightID: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Seat assignments found */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SeatAssignment"][];
                };
            };
            /** @description Flight not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    createSeatAssignment: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                flightID: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    itineraryID: components["schemas"]["ItineraryID"];
                    passengerID: number;
                    seat: components["schemas"]["SeatNumber"];
                };
            };
        };
        responses: {
            /** @description Seat assignment created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SeatAssignment"];
                };
            };
            /** @description Invalid request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Flight not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    listPassengers: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description List of passengers */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Passenger"][];
                };
            };
        };
    };
    createPassenger: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    name: string;
                };
            };
        };
        responses: {
            /** @description Passenger created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Passenger"];
                };
            };
            /** @description Invalid request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    getPassenger: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Passenger found */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Passenger"];
                };
            };
            /** @description Passenger not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    deletePassenger: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Passenger deleted */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Passenger not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    updatePassenger: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    name?: string;
                };
            };
        };
        responses: {
            /** @description Passenger updated */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Passenger"];
                };
            };
            /** @description Invalid request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Passenger not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    listItineraries: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description List of itineraries */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Itinerary"][];
                };
            };
        };
    };
    createItinerary: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    flightIDs: number[];
                    passengerIDs: number[];
                };
            };
        };
        responses: {
            /** @description Itinerary created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Itinerary"];
                };
            };
            /** @description Invalid request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    getItinerary: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                itinerarySpec: components["parameters"]["itinerarySpec"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Itinerary found */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Itinerary"];
                };
            };
            /** @description Itinerary not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    deleteItinerary: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                itinerarySpec: components["parameters"]["itinerarySpec"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Itinerary deleted */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Itinerary not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    listRoutes: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description List of routes */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Route"][];
                };
            };
        };
    };
    getRoute: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                route: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Route information */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Route"];
                };
            };
            /** @description Route not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
}
