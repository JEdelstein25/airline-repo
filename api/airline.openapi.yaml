# yaml-language-server: $schema=https://spec.openapis.org/oas/3.0/schema/2024-10-18
openapi: 3.0.0
info:
  title: Stellora Airline API
  version: 1.0.0
paths:
  /health:
    get:
      operationId: healthCheck
      summary: Health check endpoint
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
  /airports:
    get:
      operationId: listAirports
      summary: List all airports
      responses:
        '200':
          description: List of airports
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Airport'
    post:
      operationId: createAirport
      summary: Create a new airport
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
              required:
                - title
      responses:
        '201':
          description: Airport created
        '400':
          description: Invalid request
  /airports/{id}:
    get:
      operationId: getAirport
      summary: Get airport by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Airport found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Airport'
        '404':
          description: Airport not found
    delete:
      operationId: deleteAirport
      summary: Delete a airport
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Airport deleted
        '404':
          description: Airport not found

  /flights:
    get:
      operationId: listFlights
      summary: List all flights
      responses:
        '200':
          description: List of flights
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Flight'
    post:
      operationId: createFlight
      summary: Create a new flight
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
              required:
                - title
      responses:
        '201':
          description: Flight created
        '400':
          description: Invalid request
    delete:
      operationId: deleteAllFlights
      summary: Delete all flights
      responses:
        '204':
          description: All flights deleted

  /flights/{id}:
    get:
      operationId: getFlight
      summary: Get flight by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Flight found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Flight'
        '404':
          description: Flight not found
    patch:
      operationId: setFlightStarred
      summary: Set flight starred status
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                starred:
                  type: boolean
              required:
                - starred
      responses:
        '204':
          description: Flight updated
        '404':
          description: Flight not found
    delete:
      operationId: deleteFlight
      summary: Delete a flight
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Flight deleted
        '404':
          description: Flight not found

  /airports/{airportId}/flights:
    get:
      operationId: listFlightsByAirport
      summary: List flights in a airport
      parameters:
        - name: airportId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Flights categorization
          content:
            application/json:
              schema:
                type: object
                properties:
                  flightsInAirport:
                    type: array
                    items:
                      $ref: '#/components/schemas/Flight'
                  flightsNotInAirport:
                    type: array
                    items:
                      $ref: '#/components/schemas/Flight'
                required:
                  - flightsInAirport
                  - flightsNotInAirport

  /flights/{flightId}/airports/{airportId}:
    put:
      operationId: updateFlightAirportMembership
      summary: Set flight airport membership
      parameters:
        - name: flightId
          in: path
          required: true
          schema:
            type: string
        - name: airportId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                value:
                  type: boolean
              required:
                - value
      responses:
        '204':
          description: Membership updated
        '404':
          description: Flight or airport not found

components:
  schemas:
    Airport:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
      required:
        - id
        - title

    Flight:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        starred:
          type: boolean
        airports:
          type: array
          items:
            $ref: '#/components/schemas/Airport'
      required:
        - id
        - title
        - starred